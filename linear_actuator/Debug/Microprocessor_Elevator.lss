
Microprocessor_Elevator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00000336  000003ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000336  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  0080013a  0080013a  00000404  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000404  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000434  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000470  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fad  00000000  00000000  00000508  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008df  00000000  00000000  000014b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000633  00000000  00000000  00001d94  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000148  00000000  00000000  000023c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004c2  00000000  00000000  00002510  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004b8  00000000  00000000  000029d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00002e8a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	bb c0       	rjmp	.+374    	; 0x1c0 <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	c6 c0       	rjmp	.+396    	; 0x1de <__vector_20>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 e3       	ldi	r30, 0x36	; 54
  a0:	f3 e0       	ldi	r31, 0x03	; 3
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 33       	cpi	r26, 0x3A	; 58
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e3       	ldi	r26, 0x3A	; 58
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ab 33       	cpi	r26, 0x3B	; 59
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	ac d0       	rcall	.+344    	; 0x21c <main>
  c4:	36 c1       	rjmp	.+620    	; 0x332 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <LCD_Data>:
}

void LCD_Cursor_Home(void)
{
    LCD_Comm(0x02);
    LCD_Delay(2);
  c8:	e5 e6       	ldi	r30, 0x65	; 101
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	90 81       	ld	r25, Z
  ce:	94 60       	ori	r25, 0x04	; 4
  d0:	90 83       	st	Z, r25
  d2:	90 81       	ld	r25, Z
  d4:	9d 7f       	andi	r25, 0xFD	; 253
  d6:	90 83       	st	Z, r25
  d8:	90 81       	ld	r25, Z
  da:	91 60       	ori	r25, 0x01	; 1
  dc:	90 83       	st	Z, r25
  de:	96 ef       	ldi	r25, 0xF6	; 246
  e0:	9a 95       	dec	r25
  e2:	f1 f7       	brne	.-4      	; 0xe0 <LCD_Data+0x18>
  e4:	8b bb       	out	0x1b, r24	; 27
  e6:	86 ef       	ldi	r24, 0xF6	; 246
  e8:	8a 95       	dec	r24
  ea:	f1 f7       	brne	.-4      	; 0xe8 <LCD_Data+0x20>
  ec:	80 81       	ld	r24, Z
  ee:	8e 7f       	andi	r24, 0xFE	; 254
  f0:	80 83       	st	Z, r24
  f2:	08 95       	ret

000000f4 <LCD_Comm>:
  f4:	e5 e6       	ldi	r30, 0x65	; 101
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	90 81       	ld	r25, Z
  fa:	9b 7f       	andi	r25, 0xFB	; 251
  fc:	90 83       	st	Z, r25
  fe:	90 81       	ld	r25, Z
 100:	9d 7f       	andi	r25, 0xFD	; 253
 102:	90 83       	st	Z, r25
 104:	90 81       	ld	r25, Z
 106:	91 60       	ori	r25, 0x01	; 1
 108:	90 83       	st	Z, r25
 10a:	96 ef       	ldi	r25, 0xF6	; 246
 10c:	9a 95       	dec	r25
 10e:	f1 f7       	brne	.-4      	; 0x10c <LCD_Comm+0x18>
 110:	8b bb       	out	0x1b, r24	; 27
 112:	86 ef       	ldi	r24, 0xF6	; 246
 114:	8a 95       	dec	r24
 116:	f1 f7       	brne	.-4      	; 0x114 <LCD_Comm+0x20>
 118:	80 81       	ld	r24, Z
 11a:	8e 7f       	andi	r24, 0xFE	; 254
 11c:	80 83       	st	Z, r24
 11e:	08 95       	ret

00000120 <LCD_Delay>:
 120:	20 e0       	ldi	r18, 0x00	; 0
 122:	30 e0       	ldi	r19, 0x00	; 0
 124:	07 c0       	rjmp	.+14     	; 0x134 <LCD_Delay+0x14>
 126:	e6 e6       	ldi	r30, 0x66	; 102
 128:	fe e0       	ldi	r31, 0x0E	; 14
 12a:	31 97       	sbiw	r30, 0x01	; 1
 12c:	f1 f7       	brne	.-4      	; 0x12a <LCD_Delay+0xa>
 12e:	00 00       	nop
 130:	2f 5f       	subi	r18, 0xFF	; 255
 132:	3f 4f       	sbci	r19, 0xFF	; 255
 134:	48 2f       	mov	r20, r24
 136:	50 e0       	ldi	r21, 0x00	; 0
 138:	24 17       	cp	r18, r20
 13a:	35 07       	cpc	r19, r21
 13c:	a4 f3       	brlt	.-24     	; 0x126 <LCD_Delay+0x6>
 13e:	08 95       	ret

00000140 <LCD_Char>:
 140:	cf 93       	push	r28
 142:	c8 2f       	mov	r28, r24
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	ec df       	rcall	.-40     	; 0x120 <LCD_Delay>
 148:	8c 2f       	mov	r24, r28
 14a:	be df       	rcall	.-132    	; 0xc8 <LCD_Data>
 14c:	cf 91       	pop	r28
 14e:	08 95       	ret

00000150 <LCD_Str>:
 150:	cf 93       	push	r28
 152:	df 93       	push	r29
 154:	ec 01       	movw	r28, r24
 156:	02 c0       	rjmp	.+4      	; 0x15c <LCD_Str+0xc>
 158:	f3 df       	rcall	.-26     	; 0x140 <LCD_Char>
 15a:	21 96       	adiw	r28, 0x01	; 1
 15c:	88 81       	ld	r24, Y
 15e:	81 11       	cpse	r24, r1
 160:	fb cf       	rjmp	.-10     	; 0x158 <LCD_Str+0x8>
 162:	df 91       	pop	r29
 164:	cf 91       	pop	r28
 166:	08 95       	ret

00000168 <LCD_Pos>:
 168:	90 e4       	ldi	r25, 0x40	; 64
 16a:	89 9f       	mul	r24, r25
 16c:	60 0d       	add	r22, r0
 16e:	11 24       	eor	r1, r1
 170:	86 2f       	mov	r24, r22
 172:	80 68       	ori	r24, 0x80	; 128
 174:	bf cf       	rjmp	.-130    	; 0xf4 <LCD_Comm>
 176:	08 95       	ret

00000178 <LCD_Clear>:
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	bc df       	rcall	.-136    	; 0xf4 <LCD_Comm>
 17c:	82 e0       	ldi	r24, 0x02	; 2
 17e:	d0 cf       	rjmp	.-96     	; 0x120 <LCD_Delay>
 180:	08 95       	ret

00000182 <LCD_PORT_Init>:
 182:	8f ef       	ldi	r24, 0xFF	; 255
 184:	8a bb       	out	0x1a, r24	; 26
 186:	e4 e6       	ldi	r30, 0x64	; 100
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	80 81       	ld	r24, Z
 18c:	8f 60       	ori	r24, 0x0F	; 15
 18e:	80 83       	st	Z, r24
 190:	08 95       	ret

00000192 <LCD_Init>:
 192:	f7 df       	rcall	.-18     	; 0x182 <LCD_PORT_Init>
 194:	88 e3       	ldi	r24, 0x38	; 56
 196:	ae df       	rcall	.-164    	; 0xf4 <LCD_Comm>
 198:	84 e0       	ldi	r24, 0x04	; 4
 19a:	c2 df       	rcall	.-124    	; 0x120 <LCD_Delay>
 19c:	88 e3       	ldi	r24, 0x38	; 56
 19e:	aa df       	rcall	.-172    	; 0xf4 <LCD_Comm>
 1a0:	84 e0       	ldi	r24, 0x04	; 4
 1a2:	be df       	rcall	.-132    	; 0x120 <LCD_Delay>
 1a4:	88 e3       	ldi	r24, 0x38	; 56
 1a6:	a6 df       	rcall	.-180    	; 0xf4 <LCD_Comm>
 1a8:	84 e0       	ldi	r24, 0x04	; 4
 1aa:	ba df       	rcall	.-140    	; 0x120 <LCD_Delay>
 1ac:	8e e0       	ldi	r24, 0x0E	; 14
 1ae:	a2 df       	rcall	.-188    	; 0xf4 <LCD_Comm>
 1b0:	82 e0       	ldi	r24, 0x02	; 2
 1b2:	b6 df       	rcall	.-148    	; 0x120 <LCD_Delay>
 1b4:	86 e0       	ldi	r24, 0x06	; 6
 1b6:	9e df       	rcall	.-196    	; 0xf4 <LCD_Comm>
 1b8:	82 e0       	ldi	r24, 0x02	; 2
 1ba:	b2 df       	rcall	.-156    	; 0x120 <LCD_Delay>
 1bc:	dd cf       	rjmp	.-70     	; 0x178 <LCD_Clear>
 1be:	08 95       	ret

000001c0 <__vector_18>:
#include <stdio.h>
#include "lcd.h"

unsigned char ch;

ISR(USART0_RX_vect){
 1c0:	1f 92       	push	r1
 1c2:	0f 92       	push	r0
 1c4:	0f b6       	in	r0, 0x3f	; 63
 1c6:	0f 92       	push	r0
 1c8:	11 24       	eor	r1, r1
 1ca:	8f 93       	push	r24
	ch = UDR0;
 1cc:	8c b1       	in	r24, 0x0c	; 12
 1ce:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
}
 1d2:	8f 91       	pop	r24
 1d4:	0f 90       	pop	r0
 1d6:	0f be       	out	0x3f, r0	; 63
 1d8:	0f 90       	pop	r0
 1da:	1f 90       	pop	r1
 1dc:	18 95       	reti

000001de <__vector_20>:

ISR(USART0_TX_vect){
 1de:	1f 92       	push	r1
 1e0:	0f 92       	push	r0
 1e2:	0f b6       	in	r0, 0x3f	; 63
 1e4:	0f 92       	push	r0
 1e6:	11 24       	eor	r1, r1
 1e8:	8f 93       	push	r24
	UDR0 = ch;
 1ea:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end>
 1ee:	8c b9       	out	0x0c, r24	; 12
}
 1f0:	8f 91       	pop	r24
 1f2:	0f 90       	pop	r0
 1f4:	0f be       	out	0x3f, r0	; 63
 1f6:	0f 90       	pop	r0
 1f8:	1f 90       	pop	r1
 1fa:	18 95       	reti

000001fc <Init_USART0>:

void Init_USART0(void){			// 블루투스 초기화
	UCSR0A = 0x00;
 1fc:	1b b8       	out	0x0b, r1	; 11
	UCSR0B = (1<<RXCIE0)|(1<<TXCIE0)|(1<<RXEN0) | (1<<TXEN0);
 1fe:	88 ed       	ldi	r24, 0xD8	; 216
 200:	8a b9       	out	0x0a, r24	; 10
	UCSR1C = (1<<UCSZ01) | (1<<UCSZ00);
 202:	86 e0       	ldi	r24, 0x06	; 6
 204:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
	UCSR0C &= ~(1<<UMSEL0);
 208:	e5 e9       	ldi	r30, 0x95	; 149
 20a:	f0 e0       	ldi	r31, 0x00	; 0
 20c:	80 81       	ld	r24, Z
 20e:	8f 7b       	andi	r24, 0xBF	; 191
 210:	80 83       	st	Z, r24
	
	UBRR0H = 0;
 212:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 95;
 216:	8f e5       	ldi	r24, 0x5F	; 95
 218:	89 b9       	out	0x09, r24	; 9
 21a:	08 95       	ret

0000021c <main>:
}

int main(void)
{
	DDRB|=0x60;		//PB5,6
 21c:	87 b3       	in	r24, 0x17	; 23
 21e:	80 66       	ori	r24, 0x60	; 96
 220:	87 bb       	out	0x17, r24	; 23
	PORTB|=0x60;
 222:	88 b3       	in	r24, 0x18	; 24
 224:	80 66       	ori	r24, 0x60	; 96
 226:	88 bb       	out	0x18, r24	; 24

	TCCR1A=0xA2;
 228:	82 ea       	ldi	r24, 0xA2	; 162
 22a:	8f bd       	out	0x2f, r24	; 47
	TCCR1B=0x1b;
 22c:	8b e1       	ldi	r24, 0x1B	; 27
 22e:	8e bd       	out	0x2e, r24	; 46
	ICR1=4999;     //TOP
 230:	87 e8       	ldi	r24, 0x87	; 135
 232:	93 e1       	ldi	r25, 0x13	; 19
 234:	97 bd       	out	0x27, r25	; 39
 236:	86 bd       	out	0x26, r24	; 38
	OCR1A=375;     //0도
 238:	87 e7       	ldi	r24, 0x77	; 119
 23a:	91 e0       	ldi	r25, 0x01	; 1
 23c:	9b bd       	out	0x2b, r25	; 43
 23e:	8a bd       	out	0x2a, r24	; 42
	OCR1B=375;
 240:	99 bd       	out	0x29, r25	; 41
 242:	88 bd       	out	0x28, r24	; 40
	
	Init_USART0();
 244:	db df       	rcall	.-74     	; 0x1fc <Init_USART0>
	sei();
	LCD_Init();
 246:	78 94       	sei
	LCD_Clear();
 248:	a4 df       	rcall	.-184    	; 0x192 <LCD_Init>
	LCD_Pos(0,0);
 24a:	96 df       	rcall	.-212    	; 0x178 <LCD_Clear>
 24c:	60 e0       	ldi	r22, 0x00	; 0
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	8b df       	rcall	.-234    	; 0x168 <LCD_Pos>
	while(1)
	{
		OCR1B = 250;
 252:	8a ef       	ldi	r24, 0xFA	; 250
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	99 bd       	out	0x29, r25	; 41
 258:	88 bd       	out	0x28, r24	; 40
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 25a:	2f ef       	ldi	r18, 0xFF	; 255
 25c:	8f ef       	ldi	r24, 0xFF	; 255
 25e:	9c e2       	ldi	r25, 0x2C	; 44
 260:	21 50       	subi	r18, 0x01	; 1
 262:	80 40       	sbci	r24, 0x00	; 0
 264:	90 40       	sbci	r25, 0x00	; 0
 266:	e1 f7       	brne	.-8      	; 0x260 <main+0x44>
 268:	00 c0       	rjmp	.+0      	; 0x26a <main+0x4e>
 26a:	00 00       	nop
		_delay_ms(1000);
		OCR1B = 375;
 26c:	87 e7       	ldi	r24, 0x77	; 119
 26e:	91 e0       	ldi	r25, 0x01	; 1
 270:	99 bd       	out	0x29, r25	; 41
 272:	88 bd       	out	0x28, r24	; 40
 274:	2f ef       	ldi	r18, 0xFF	; 255
 276:	8f ef       	ldi	r24, 0xFF	; 255
 278:	9c e2       	ldi	r25, 0x2C	; 44
 27a:	21 50       	subi	r18, 0x01	; 1
 27c:	80 40       	sbci	r24, 0x00	; 0
 27e:	90 40       	sbci	r25, 0x00	; 0
 280:	e1 f7       	brne	.-8      	; 0x27a <main+0x5e>
 282:	00 c0       	rjmp	.+0      	; 0x284 <main+0x68>
 284:	00 00       	nop
		_delay_ms(1000);
		OCR1B = 500;
 286:	84 ef       	ldi	r24, 0xF4	; 244
 288:	91 e0       	ldi	r25, 0x01	; 1
 28a:	99 bd       	out	0x29, r25	; 41
 28c:	88 bd       	out	0x28, r24	; 40
 28e:	2f ef       	ldi	r18, 0xFF	; 255
 290:	8f ef       	ldi	r24, 0xFF	; 255
 292:	9c e2       	ldi	r25, 0x2C	; 44
 294:	21 50       	subi	r18, 0x01	; 1
 296:	80 40       	sbci	r24, 0x00	; 0
 298:	90 40       	sbci	r25, 0x00	; 0
 29a:	e1 f7       	brne	.-8      	; 0x294 <main+0x78>
 29c:	00 c0       	rjmp	.+0      	; 0x29e <main+0x82>
 29e:	00 00       	nop
		_delay_ms(1000);
		if(ch == '1'){
 2a0:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end>
 2a4:	81 33       	cpi	r24, 0x31	; 49
			LCD_Pos(0,0);
 2a6:	71 f4       	brne	.+28     	; 0x2c4 <main+0xa8>
 2a8:	60 e0       	ldi	r22, 0x00	; 0
 2aa:	80 e0       	ldi	r24, 0x00	; 0
			LCD_Str("1st Floor");
 2ac:	5d df       	rcall	.-326    	; 0x168 <LCD_Pos>
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	91 e0       	ldi	r25, 0x01	; 1
 2b2:	4e df       	rcall	.-356    	; 0x150 <LCD_Str>
			OCR1A=250;     //-90도	1층	
 2b4:	8a ef       	ldi	r24, 0xFA	; 250
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	9b bd       	out	0x2b, r25	; 43
 2ba:	8a bd       	out	0x2a, r24	; 42
			ch = '0';
 2bc:	80 e3       	ldi	r24, 0x30	; 48
 2be:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
		}
		else if(ch == '2'){
 2c2:	c7 cf       	rjmp	.-114    	; 0x252 <main+0x36>
			LCD_Pos(0,0);
 2c4:	82 33       	cpi	r24, 0x32	; 50
 2c6:	71 f4       	brne	.+28     	; 0x2e4 <main+0xc8>
 2c8:	60 e0       	ldi	r22, 0x00	; 0
 2ca:	80 e0       	ldi	r24, 0x00	; 0
			LCD_Str("2nd Floor");
 2cc:	4d df       	rcall	.-358    	; 0x168 <LCD_Pos>
 2ce:	8a e0       	ldi	r24, 0x0A	; 10
 2d0:	91 e0       	ldi	r25, 0x01	; 1
 2d2:	3e df       	rcall	.-388    	; 0x150 <LCD_Str>
			OCR1A=333;		// 2층
 2d4:	8d e4       	ldi	r24, 0x4D	; 77
 2d6:	91 e0       	ldi	r25, 0x01	; 1
 2d8:	9b bd       	out	0x2b, r25	; 43
 2da:	8a bd       	out	0x2a, r24	; 42
			ch = '0';
 2dc:	80 e3       	ldi	r24, 0x30	; 48
 2de:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
		}
		else if(ch == '3'){
 2e2:	b7 cf       	rjmp	.-146    	; 0x252 <main+0x36>
 2e4:	83 33       	cpi	r24, 0x33	; 51
			LCD_Pos(0,0);
 2e6:	71 f4       	brne	.+28     	; 0x304 <main+0xe8>
 2e8:	60 e0       	ldi	r22, 0x00	; 0
 2ea:	80 e0       	ldi	r24, 0x00	; 0
 2ec:	3d df       	rcall	.-390    	; 0x168 <LCD_Pos>
			LCD_Str("3rd Floor");
 2ee:	84 e1       	ldi	r24, 0x14	; 20
 2f0:	91 e0       	ldi	r25, 0x01	; 1
 2f2:	2e df       	rcall	.-420    	; 0x150 <LCD_Str>
 2f4:	80 ea       	ldi	r24, 0xA0	; 160
			OCR1A = 416;		// 3층
 2f6:	91 e0       	ldi	r25, 0x01	; 1
 2f8:	9b bd       	out	0x2b, r25	; 43
 2fa:	8a bd       	out	0x2a, r24	; 42
			ch = '0';
 2fc:	80 e3       	ldi	r24, 0x30	; 48
 2fe:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
		}
		else if(ch == '4'){
 302:	a7 cf       	rjmp	.-178    	; 0x252 <main+0x36>
 304:	84 33       	cpi	r24, 0x34	; 52
			//LCD_Clear();
			LCD_Pos(0,0);
 306:	71 f4       	brne	.+28     	; 0x324 <main+0x108>
 308:	60 e0       	ldi	r22, 0x00	; 0
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	2d df       	rcall	.-422    	; 0x168 <LCD_Pos>
			LCD_Str("4th Floor");
 30e:	8e e1       	ldi	r24, 0x1E	; 30
 310:	91 e0       	ldi	r25, 0x01	; 1
 312:	1e df       	rcall	.-452    	; 0x150 <LCD_Str>
			OCR1A=500;     //90도	4층
 314:	84 ef       	ldi	r24, 0xF4	; 244
 316:	91 e0       	ldi	r25, 0x01	; 1
 318:	9b bd       	out	0x2b, r25	; 43
			ch = '0';
 31a:	8a bd       	out	0x2a, r24	; 42
 31c:	80 e3       	ldi	r24, 0x30	; 48
 31e:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
		}
		else{
			//LCD_Clear();
			LCD_Pos(0,0);
 322:	97 cf       	rjmp	.-210    	; 0x252 <main+0x36>
 324:	60 e0       	ldi	r22, 0x00	; 0
 326:	80 e0       	ldi	r24, 0x00	; 0
 328:	1f df       	rcall	.-450    	; 0x168 <LCD_Pos>
			LCD_Str("Enter 1to4 floor");
 32a:	88 e2       	ldi	r24, 0x28	; 40
 32c:	91 e0       	ldi	r25, 0x01	; 1
 32e:	10 df       	rcall	.-480    	; 0x150 <LCD_Str>
 330:	90 cf       	rjmp	.-224    	; 0x252 <main+0x36>

00000332 <_exit>:
 332:	f8 94       	cli

00000334 <__stop_program>:
 334:	ff cf       	rjmp	.-2      	; 0x334 <__stop_program>
